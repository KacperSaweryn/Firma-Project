//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Adres_Wojewodztwo", "Wojewodztwo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Wojewodztwo), "Adres", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Adres), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Kontrahent_Adres", "Adres", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Adres), "Kontrahent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Kontrahent), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Osoba_Adres", "Adres", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Firma.Models.Entities.Adres), "Osoba", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Osoba), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Pracownik_Credential", "Credential", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Credential), "Pracownik", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Pracownik), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Faktura_Kontrahent", "Kontrahent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Kontrahent), "Faktura", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Faktura), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Faktura_Pracownik", "Pracownik", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Pracownik), "Faktura", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Faktura), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Faktura_SpPlatnosci", "SposobPlatnosci", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.SposobPlatnosci), "Faktura", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Faktura), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_PozycjaFaktury_Faktura", "Faktura", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Faktura), "PozycjaFaktury", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.PozycjaFaktury), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Towar_Jednostka", "Jednostka", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Jednostka), "Towar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Towar), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Kontrahent_Osoba", "Osoba", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Firma.Models.Entities.Osoba), "Kontrahent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Kontrahent), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Kontrahent_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Status), "Kontrahent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Kontrahent), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Pracownik_Osoba", "Osoba", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Osoba), "Pracownik", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Pracownik), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_PozycjaFaktury_Towar", "Towar", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Towar), "PozycjaFaktury", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.PozycjaFaktury), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Towar_Rodzaj", "TowarRodzaj", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.TowarRodzaj), "Towar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Towar), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Towar_Sprzedaz", "Vat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Vat), "Towar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Towar), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Towar_Zakup", "Vat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Vat), "Towar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Towar), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_PozycjaFaktury_Vat", "Vat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Vat), "PozycjaFaktury", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.PozycjaFaktury), true)]
[assembly: EdmRelationshipAttribute("FirmaProjectModel", "FK_Ilosc_Towar", "Towar", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Firma.Models.Entities.Towar), "Ilosc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Firma.Models.Entities.Ilosc), true)]

#endregion

namespace Firma.Models.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FirmaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FirmaEntities object using the connection string found in the 'FirmaEntities' section of the application configuration file.
        /// </summary>
        public FirmaEntities() : base("name=FirmaEntities", "FirmaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FirmaEntities object.
        /// </summary>
        public FirmaEntities(string connectionString) : base(connectionString, "FirmaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FirmaEntities object.
        /// </summary>
        public FirmaEntities(EntityConnection connection) : base(connection, "FirmaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Adres> Adres
        {
            get
            {
                if ((_Adres == null))
                {
                    _Adres = base.CreateObjectSet<Adres>("Adres");
                }
                return _Adres;
            }
        }
        private ObjectSet<Adres> _Adres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Credential> Credential
        {
            get
            {
                if ((_Credential == null))
                {
                    _Credential = base.CreateObjectSet<Credential>("Credential");
                }
                return _Credential;
            }
        }
        private ObjectSet<Credential> _Credential;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Faktura> Faktura
        {
            get
            {
                if ((_Faktura == null))
                {
                    _Faktura = base.CreateObjectSet<Faktura>("Faktura");
                }
                return _Faktura;
            }
        }
        private ObjectSet<Faktura> _Faktura;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Jednostka> Jednostka
        {
            get
            {
                if ((_Jednostka == null))
                {
                    _Jednostka = base.CreateObjectSet<Jednostka>("Jednostka");
                }
                return _Jednostka;
            }
        }
        private ObjectSet<Jednostka> _Jednostka;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Kontrahent> Kontrahent
        {
            get
            {
                if ((_Kontrahent == null))
                {
                    _Kontrahent = base.CreateObjectSet<Kontrahent>("Kontrahent");
                }
                return _Kontrahent;
            }
        }
        private ObjectSet<Kontrahent> _Kontrahent;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<KontrahentRodzaj> KontrahentRodzaj
        {
            get
            {
                if ((_KontrahentRodzaj == null))
                {
                    _KontrahentRodzaj = base.CreateObjectSet<KontrahentRodzaj>("KontrahentRodzaj");
                }
                return _KontrahentRodzaj;
            }
        }
        private ObjectSet<KontrahentRodzaj> _KontrahentRodzaj;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Osoba> Osoba
        {
            get
            {
                if ((_Osoba == null))
                {
                    _Osoba = base.CreateObjectSet<Osoba>("Osoba");
                }
                return _Osoba;
            }
        }
        private ObjectSet<Osoba> _Osoba;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PozycjaFaktury> PozycjaFaktury
        {
            get
            {
                if ((_PozycjaFaktury == null))
                {
                    _PozycjaFaktury = base.CreateObjectSet<PozycjaFaktury>("PozycjaFaktury");
                }
                return _PozycjaFaktury;
            }
        }
        private ObjectSet<PozycjaFaktury> _PozycjaFaktury;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pracownik> Pracownik
        {
            get
            {
                if ((_Pracownik == null))
                {
                    _Pracownik = base.CreateObjectSet<Pracownik>("Pracownik");
                }
                return _Pracownik;
            }
        }
        private ObjectSet<Pracownik> _Pracownik;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SposobPlatnosci> SposobPlatnosci
        {
            get
            {
                if ((_SposobPlatnosci == null))
                {
                    _SposobPlatnosci = base.CreateObjectSet<SposobPlatnosci>("SposobPlatnosci");
                }
                return _SposobPlatnosci;
            }
        }
        private ObjectSet<SposobPlatnosci> _SposobPlatnosci;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Towar> Towar
        {
            get
            {
                if ((_Towar == null))
                {
                    _Towar = base.CreateObjectSet<Towar>("Towar");
                }
                return _Towar;
            }
        }
        private ObjectSet<Towar> _Towar;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TowarRodzaj> TowarRodzaj
        {
            get
            {
                if ((_TowarRodzaj == null))
                {
                    _TowarRodzaj = base.CreateObjectSet<TowarRodzaj>("TowarRodzaj");
                }
                return _TowarRodzaj;
            }
        }
        private ObjectSet<TowarRodzaj> _TowarRodzaj;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vat> Vat
        {
            get
            {
                if ((_Vat == null))
                {
                    _Vat = base.CreateObjectSet<Vat>("Vat");
                }
                return _Vat;
            }
        }
        private ObjectSet<Vat> _Vat;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wojewodztwo> Wojewodztwo
        {
            get
            {
                if ((_Wojewodztwo == null))
                {
                    _Wojewodztwo = base.CreateObjectSet<Wojewodztwo>("Wojewodztwo");
                }
                return _Wojewodztwo;
            }
        }
        private ObjectSet<Wojewodztwo> _Wojewodztwo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ilosc> Ilosc
        {
            get
            {
                if ((_Ilosc == null))
                {
                    _Ilosc = base.CreateObjectSet<Ilosc>("Ilosc");
                }
                return _Ilosc;
            }
        }
        private ObjectSet<Ilosc> _Ilosc;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Adres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdres(Adres adres)
        {
            base.AddObject("Adres", adres);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Credential EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCredential(Credential credential)
        {
            base.AddObject("Credential", credential);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Faktura EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFaktura(Faktura faktura)
        {
            base.AddObject("Faktura", faktura);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jednostka EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJednostka(Jednostka jednostka)
        {
            base.AddObject("Jednostka", jednostka);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Kontrahent EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKontrahent(Kontrahent kontrahent)
        {
            base.AddObject("Kontrahent", kontrahent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KontrahentRodzaj EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKontrahentRodzaj(KontrahentRodzaj kontrahentRodzaj)
        {
            base.AddObject("KontrahentRodzaj", kontrahentRodzaj);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Osoba EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOsoba(Osoba osoba)
        {
            base.AddObject("Osoba", osoba);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PozycjaFaktury EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPozycjaFaktury(PozycjaFaktury pozycjaFaktury)
        {
            base.AddObject("PozycjaFaktury", pozycjaFaktury);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pracownik EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPracownik(Pracownik pracownik)
        {
            base.AddObject("Pracownik", pracownik);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SposobPlatnosci EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSposobPlatnosci(SposobPlatnosci sposobPlatnosci)
        {
            base.AddObject("SposobPlatnosci", sposobPlatnosci);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Towar EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTowar(Towar towar)
        {
            base.AddObject("Towar", towar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TowarRodzaj EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTowarRodzaj(TowarRodzaj towarRodzaj)
        {
            base.AddObject("TowarRodzaj", towarRodzaj);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vat EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVat(Vat vat)
        {
            base.AddObject("Vat", vat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Wojewodztwo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWojewodztwo(Wojewodztwo wojewodztwo)
        {
            base.AddObject("Wojewodztwo", wojewodztwo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ilosc EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIlosc(Ilosc ilosc)
        {
            base.AddObject("Ilosc", ilosc);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Adres")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Adres : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Adres object.
        /// </summary>
        /// <param name="adresID">Initial value of the AdresID property.</param>
        /// <param name="wojewodztwoID">Initial value of the WojewodztwoID property.</param>
        /// <param name="miasto">Initial value of the Miasto property.</param>
        /// <param name="ulica">Initial value of the Ulica property.</param>
        /// <param name="nrDomu">Initial value of the NrDomu property.</param>
        /// <param name="poczta">Initial value of the Poczta property.</param>
        /// <param name="kraj">Initial value of the Kraj property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Adres CreateAdres(global::System.Int32 adresID, global::System.Int32 wojewodztwoID, global::System.String miasto, global::System.String ulica, global::System.String nrDomu, global::System.String poczta, global::System.String kraj, global::System.Boolean isActive)
        {
            Adres adres = new Adres();
            adres.AdresID = adresID;
            adres.WojewodztwoID = wojewodztwoID;
            adres.Miasto = miasto;
            adres.Ulica = ulica;
            adres.NrDomu = nrDomu;
            adres.Poczta = poczta;
            adres.Kraj = kraj;
            adres.IsActive = isActive;
            return adres;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdresID
        {
            get
            {
                return _AdresID;
            }
            set
            {
                if (_AdresID != value)
                {
                    OnAdresIDChanging(value);
                    ReportPropertyChanging("AdresID");
                    _AdresID = StructuralObject.SetValidValue(value, "AdresID");
                    ReportPropertyChanged("AdresID");
                    OnAdresIDChanged();
                }
            }
        }
        private global::System.Int32 _AdresID;
        partial void OnAdresIDChanging(global::System.Int32 value);
        partial void OnAdresIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WojewodztwoID
        {
            get
            {
                return _WojewodztwoID;
            }
            set
            {
                OnWojewodztwoIDChanging(value);
                ReportPropertyChanging("WojewodztwoID");
                _WojewodztwoID = StructuralObject.SetValidValue(value, "WojewodztwoID");
                ReportPropertyChanged("WojewodztwoID");
                OnWojewodztwoIDChanged();
            }
        }
        private global::System.Int32 _WojewodztwoID;
        partial void OnWojewodztwoIDChanging(global::System.Int32 value);
        partial void OnWojewodztwoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Miasto
        {
            get
            {
                return _Miasto;
            }
            set
            {
                OnMiastoChanging(value);
                ReportPropertyChanging("Miasto");
                _Miasto = StructuralObject.SetValidValue(value, false, "Miasto");
                ReportPropertyChanged("Miasto");
                OnMiastoChanged();
            }
        }
        private global::System.String _Miasto;
        partial void OnMiastoChanging(global::System.String value);
        partial void OnMiastoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ulica
        {
            get
            {
                return _Ulica;
            }
            set
            {
                OnUlicaChanging(value);
                ReportPropertyChanging("Ulica");
                _Ulica = StructuralObject.SetValidValue(value, false, "Ulica");
                ReportPropertyChanged("Ulica");
                OnUlicaChanged();
            }
        }
        private global::System.String _Ulica;
        partial void OnUlicaChanging(global::System.String value);
        partial void OnUlicaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NrDomu
        {
            get
            {
                return _NrDomu;
            }
            set
            {
                OnNrDomuChanging(value);
                ReportPropertyChanging("NrDomu");
                _NrDomu = StructuralObject.SetValidValue(value, false, "NrDomu");
                ReportPropertyChanged("NrDomu");
                OnNrDomuChanged();
            }
        }
        private global::System.String _NrDomu;
        partial void OnNrDomuChanging(global::System.String value);
        partial void OnNrDomuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NrLokalu
        {
            get
            {
                return _NrLokalu;
            }
            set
            {
                OnNrLokaluChanging(value);
                ReportPropertyChanging("NrLokalu");
                _NrLokalu = StructuralObject.SetValidValue(value, true, "NrLokalu");
                ReportPropertyChanged("NrLokalu");
                OnNrLokaluChanged();
            }
        }
        private global::System.String _NrLokalu;
        partial void OnNrLokaluChanging(global::System.String value);
        partial void OnNrLokaluChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Poczta
        {
            get
            {
                return _Poczta;
            }
            set
            {
                OnPocztaChanging(value);
                ReportPropertyChanging("Poczta");
                _Poczta = StructuralObject.SetValidValue(value, false, "Poczta");
                ReportPropertyChanged("Poczta");
                OnPocztaChanged();
            }
        }
        private global::System.String _Poczta;
        partial void OnPocztaChanging(global::System.String value);
        partial void OnPocztaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Kraj
        {
            get
            {
                return _Kraj;
            }
            set
            {
                OnKrajChanging(value);
                ReportPropertyChanging("Kraj");
                _Kraj = StructuralObject.SetValidValue(value, false, "Kraj");
                ReportPropertyChanged("Kraj");
                OnKrajChanged();
            }
        }
        private global::System.String _Kraj;
        partial void OnKrajChanging(global::System.String value);
        partial void OnKrajChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Adres_Wojewodztwo", "Wojewodztwo")]
        public Wojewodztwo Wojewodztwo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wojewodztwo>("FirmaProjectModel.FK_Adres_Wojewodztwo", "Wojewodztwo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wojewodztwo>("FirmaProjectModel.FK_Adres_Wojewodztwo", "Wojewodztwo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wojewodztwo> WojewodztwoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wojewodztwo>("FirmaProjectModel.FK_Adres_Wojewodztwo", "Wojewodztwo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wojewodztwo>("FirmaProjectModel.FK_Adres_Wojewodztwo", "Wojewodztwo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Kontrahent_Adres", "Kontrahent")]
        public EntityCollection<Kontrahent> Kontrahent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Kontrahent>("FirmaProjectModel.FK_Kontrahent_Adres", "Kontrahent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Kontrahent>("FirmaProjectModel.FK_Kontrahent_Adres", "Kontrahent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Osoba_Adres", "Osoba")]
        public EntityCollection<Osoba> Osoba
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Osoba>("FirmaProjectModel.FK_Osoba_Adres", "Osoba");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Osoba>("FirmaProjectModel.FK_Osoba_Adres", "Osoba", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Credential")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Credential : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Credential object.
        /// </summary>
        /// <param name="credentialID">Initial value of the CredentialID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Credential CreateCredential(global::System.Int32 credentialID, global::System.String login, global::System.String password, global::System.Boolean isActive)
        {
            Credential credential = new Credential();
            credential.CredentialID = credentialID;
            credential.Login = login;
            credential.Password = password;
            credential.IsActive = isActive;
            return credential;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CredentialID
        {
            get
            {
                return _CredentialID;
            }
            set
            {
                if (_CredentialID != value)
                {
                    OnCredentialIDChanging(value);
                    ReportPropertyChanging("CredentialID");
                    _CredentialID = StructuralObject.SetValidValue(value, "CredentialID");
                    ReportPropertyChanged("CredentialID");
                    OnCredentialIDChanged();
                }
            }
        }
        private global::System.Int32 _CredentialID;
        partial void OnCredentialIDChanging(global::System.Int32 value);
        partial void OnCredentialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false, "Login");
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Pracownik_Credential", "Pracownik")]
        public EntityCollection<Pracownik> Pracownik
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pracownik>("FirmaProjectModel.FK_Pracownik_Credential", "Pracownik");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pracownik>("FirmaProjectModel.FK_Pracownik_Credential", "Pracownik", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Faktura")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Faktura : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Faktura object.
        /// </summary>
        /// <param name="fakturaID">Initial value of the FakturaID property.</param>
        /// <param name="numerFak">Initial value of the NumerFak property.</param>
        /// <param name="dataWystawienia">Initial value of the DataWystawienia property.</param>
        /// <param name="terminPlatnosci">Initial value of the TerminPlatnosci property.</param>
        /// <param name="kontrahentID">Initial value of the KontrahentID property.</param>
        /// <param name="sposobPlatnosciID">Initial value of the SposobPlatnosciID property.</param>
        /// <param name="czyZatwierdzona">Initial value of the CzyZatwierdzona property.</param>
        /// <param name="ktoZatwierdzil">Initial value of the KtoZatwierdzil property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Faktura CreateFaktura(global::System.Int32 fakturaID, global::System.String numerFak, global::System.DateTime dataWystawienia, global::System.DateTime terminPlatnosci, global::System.Int32 kontrahentID, global::System.Int32 sposobPlatnosciID, global::System.Boolean czyZatwierdzona, global::System.Int32 ktoZatwierdzil, global::System.Boolean isActive)
        {
            Faktura faktura = new Faktura();
            faktura.FakturaID = fakturaID;
            faktura.NumerFak = numerFak;
            faktura.DataWystawienia = dataWystawienia;
            faktura.TerminPlatnosci = terminPlatnosci;
            faktura.KontrahentID = kontrahentID;
            faktura.SposobPlatnosciID = sposobPlatnosciID;
            faktura.CzyZatwierdzona = czyZatwierdzona;
            faktura.KtoZatwierdzil = ktoZatwierdzil;
            faktura.IsActive = isActive;
            return faktura;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FakturaID
        {
            get
            {
                return _FakturaID;
            }
            set
            {
                if (_FakturaID != value)
                {
                    OnFakturaIDChanging(value);
                    ReportPropertyChanging("FakturaID");
                    _FakturaID = StructuralObject.SetValidValue(value, "FakturaID");
                    ReportPropertyChanged("FakturaID");
                    OnFakturaIDChanged();
                }
            }
        }
        private global::System.Int32 _FakturaID;
        partial void OnFakturaIDChanging(global::System.Int32 value);
        partial void OnFakturaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NumerFak
        {
            get
            {
                return _NumerFak;
            }
            set
            {
                OnNumerFakChanging(value);
                ReportPropertyChanging("NumerFak");
                _NumerFak = StructuralObject.SetValidValue(value, false, "NumerFak");
                ReportPropertyChanged("NumerFak");
                OnNumerFakChanged();
            }
        }
        private global::System.String _NumerFak;
        partial void OnNumerFakChanging(global::System.String value);
        partial void OnNumerFakChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataWystawienia
        {
            get
            {
                return _DataWystawienia;
            }
            set
            {
                OnDataWystawieniaChanging(value);
                ReportPropertyChanging("DataWystawienia");
                _DataWystawienia = StructuralObject.SetValidValue(value, "DataWystawienia");
                ReportPropertyChanged("DataWystawienia");
                OnDataWystawieniaChanged();
            }
        }
        private global::System.DateTime _DataWystawienia;
        partial void OnDataWystawieniaChanging(global::System.DateTime value);
        partial void OnDataWystawieniaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TerminPlatnosci
        {
            get
            {
                return _TerminPlatnosci;
            }
            set
            {
                OnTerminPlatnosciChanging(value);
                ReportPropertyChanging("TerminPlatnosci");
                _TerminPlatnosci = StructuralObject.SetValidValue(value, "TerminPlatnosci");
                ReportPropertyChanged("TerminPlatnosci");
                OnTerminPlatnosciChanged();
            }
        }
        private global::System.DateTime _TerminPlatnosci;
        partial void OnTerminPlatnosciChanging(global::System.DateTime value);
        partial void OnTerminPlatnosciChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KontrahentID
        {
            get
            {
                return _KontrahentID;
            }
            set
            {
                OnKontrahentIDChanging(value);
                ReportPropertyChanging("KontrahentID");
                _KontrahentID = StructuralObject.SetValidValue(value, "KontrahentID");
                ReportPropertyChanged("KontrahentID");
                OnKontrahentIDChanged();
            }
        }
        private global::System.Int32 _KontrahentID;
        partial void OnKontrahentIDChanging(global::System.Int32 value);
        partial void OnKontrahentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SposobPlatnosciID
        {
            get
            {
                return _SposobPlatnosciID;
            }
            set
            {
                OnSposobPlatnosciIDChanging(value);
                ReportPropertyChanging("SposobPlatnosciID");
                _SposobPlatnosciID = StructuralObject.SetValidValue(value, "SposobPlatnosciID");
                ReportPropertyChanged("SposobPlatnosciID");
                OnSposobPlatnosciIDChanged();
            }
        }
        private global::System.Int32 _SposobPlatnosciID;
        partial void OnSposobPlatnosciIDChanging(global::System.Int32 value);
        partial void OnSposobPlatnosciIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CzyZatwierdzona
        {
            get
            {
                return _CzyZatwierdzona;
            }
            set
            {
                OnCzyZatwierdzonaChanging(value);
                ReportPropertyChanging("CzyZatwierdzona");
                _CzyZatwierdzona = StructuralObject.SetValidValue(value, "CzyZatwierdzona");
                ReportPropertyChanged("CzyZatwierdzona");
                OnCzyZatwierdzonaChanged();
            }
        }
        private global::System.Boolean _CzyZatwierdzona;
        partial void OnCzyZatwierdzonaChanging(global::System.Boolean value);
        partial void OnCzyZatwierdzonaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KtoZatwierdzil
        {
            get
            {
                return _KtoZatwierdzil;
            }
            set
            {
                OnKtoZatwierdzilChanging(value);
                ReportPropertyChanging("KtoZatwierdzil");
                _KtoZatwierdzil = StructuralObject.SetValidValue(value, "KtoZatwierdzil");
                ReportPropertyChanged("KtoZatwierdzil");
                OnKtoZatwierdzilChanged();
            }
        }
        private global::System.Int32 _KtoZatwierdzil;
        partial void OnKtoZatwierdzilChanging(global::System.Int32 value);
        partial void OnKtoZatwierdzilChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Faktura_Kontrahent", "Kontrahent")]
        public Kontrahent Kontrahent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Kontrahent>("FirmaProjectModel.FK_Faktura_Kontrahent", "Kontrahent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Kontrahent>("FirmaProjectModel.FK_Faktura_Kontrahent", "Kontrahent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Kontrahent> KontrahentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Kontrahent>("FirmaProjectModel.FK_Faktura_Kontrahent", "Kontrahent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Kontrahent>("FirmaProjectModel.FK_Faktura_Kontrahent", "Kontrahent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Faktura_Pracownik", "Pracownik")]
        public Pracownik Pracownik
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pracownik>("FirmaProjectModel.FK_Faktura_Pracownik", "Pracownik").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pracownik>("FirmaProjectModel.FK_Faktura_Pracownik", "Pracownik").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pracownik> PracownikReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pracownik>("FirmaProjectModel.FK_Faktura_Pracownik", "Pracownik");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pracownik>("FirmaProjectModel.FK_Faktura_Pracownik", "Pracownik", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Faktura_SpPlatnosci", "SposobPlatnosci")]
        public SposobPlatnosci SposobPlatnosci
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SposobPlatnosci>("FirmaProjectModel.FK_Faktura_SpPlatnosci", "SposobPlatnosci").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SposobPlatnosci>("FirmaProjectModel.FK_Faktura_SpPlatnosci", "SposobPlatnosci").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SposobPlatnosci> SposobPlatnosciReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SposobPlatnosci>("FirmaProjectModel.FK_Faktura_SpPlatnosci", "SposobPlatnosci");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SposobPlatnosci>("FirmaProjectModel.FK_Faktura_SpPlatnosci", "SposobPlatnosci", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_PozycjaFaktury_Faktura", "PozycjaFaktury")]
        public EntityCollection<PozycjaFaktury> PozycjaFaktury
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PozycjaFaktury>("FirmaProjectModel.FK_PozycjaFaktury_Faktura", "PozycjaFaktury");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PozycjaFaktury>("FirmaProjectModel.FK_PozycjaFaktury_Faktura", "PozycjaFaktury", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Ilosc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ilosc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ilosc object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ilosc1">Initial value of the Ilosc1 property.</param>
        /// <param name="towarID">Initial value of the TowarID property.</param>
        public static Ilosc CreateIlosc(global::System.Int32 id, global::System.Decimal ilosc1, global::System.Int32 towarID)
        {
            Ilosc ilosc = new Ilosc();
            ilosc.ID = id;
            ilosc.Ilosc1 = ilosc1;
            ilosc.TowarID = towarID;
            return ilosc;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Ilosc1
        {
            get
            {
                return _Ilosc1;
            }
            set
            {
                OnIlosc1Changing(value);
                ReportPropertyChanging("Ilosc1");
                _Ilosc1 = StructuralObject.SetValidValue(value, "Ilosc1");
                ReportPropertyChanged("Ilosc1");
                OnIlosc1Changed();
            }
        }
        private global::System.Decimal _Ilosc1;
        partial void OnIlosc1Changing(global::System.Decimal value);
        partial void OnIlosc1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TowarID
        {
            get
            {
                return _TowarID;
            }
            set
            {
                OnTowarIDChanging(value);
                ReportPropertyChanging("TowarID");
                _TowarID = StructuralObject.SetValidValue(value, "TowarID");
                ReportPropertyChanged("TowarID");
                OnTowarIDChanged();
            }
        }
        private global::System.Int32 _TowarID;
        partial void OnTowarIDChanging(global::System.Int32 value);
        partial void OnTowarIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Ilosc_Towar", "Towar")]
        public Towar Towar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Towar>("FirmaProjectModel.FK_Ilosc_Towar", "Towar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Towar>("FirmaProjectModel.FK_Ilosc_Towar", "Towar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Towar> TowarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Towar>("FirmaProjectModel.FK_Ilosc_Towar", "Towar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Towar>("FirmaProjectModel.FK_Ilosc_Towar", "Towar", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Jednostka")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Jednostka : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Jednostka object.
        /// </summary>
        /// <param name="jednostkaID">Initial value of the JednostkaID property.</param>
        /// <param name="jednostkaNazwa">Initial value of the JednostkaNazwa property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Jednostka CreateJednostka(global::System.Int32 jednostkaID, global::System.String jednostkaNazwa, global::System.Boolean isActive)
        {
            Jednostka jednostka = new Jednostka();
            jednostka.JednostkaID = jednostkaID;
            jednostka.JednostkaNazwa = jednostkaNazwa;
            jednostka.IsActive = isActive;
            return jednostka;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JednostkaID
        {
            get
            {
                return _JednostkaID;
            }
            set
            {
                if (_JednostkaID != value)
                {
                    OnJednostkaIDChanging(value);
                    ReportPropertyChanging("JednostkaID");
                    _JednostkaID = StructuralObject.SetValidValue(value, "JednostkaID");
                    ReportPropertyChanged("JednostkaID");
                    OnJednostkaIDChanged();
                }
            }
        }
        private global::System.Int32 _JednostkaID;
        partial void OnJednostkaIDChanging(global::System.Int32 value);
        partial void OnJednostkaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JednostkaNazwa
        {
            get
            {
                return _JednostkaNazwa;
            }
            set
            {
                OnJednostkaNazwaChanging(value);
                ReportPropertyChanging("JednostkaNazwa");
                _JednostkaNazwa = StructuralObject.SetValidValue(value, false, "JednostkaNazwa");
                ReportPropertyChanged("JednostkaNazwa");
                OnJednostkaNazwaChanged();
            }
        }
        private global::System.String _JednostkaNazwa;
        partial void OnJednostkaNazwaChanging(global::System.String value);
        partial void OnJednostkaNazwaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Towar_Jednostka", "Towar")]
        public EntityCollection<Towar> Towar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Towar>("FirmaProjectModel.FK_Towar_Jednostka", "Towar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Towar>("FirmaProjectModel.FK_Towar_Jednostka", "Towar", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Kontrahent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Kontrahent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Kontrahent object.
        /// </summary>
        /// <param name="kontrahentID">Initial value of the KontrahentID property.</param>
        /// <param name="kod">Initial value of the Kod property.</param>
        /// <param name="nazwa">Initial value of the Nazwa property.</param>
        /// <param name="nIP">Initial value of the NIP property.</param>
        /// <param name="nrKonta">Initial value of the NrKonta property.</param>
        /// <param name="isPodatnikVat">Initial value of the IsPodatnikVat property.</param>
        /// <param name="adresID">Initial value of the AdresID property.</param>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Kontrahent CreateKontrahent(global::System.Int32 kontrahentID, global::System.String kod, global::System.String nazwa, global::System.String nIP, global::System.String nrKonta, global::System.Boolean isPodatnikVat, global::System.Int32 adresID, global::System.Int32 statusID, global::System.Boolean isActive)
        {
            Kontrahent kontrahent = new Kontrahent();
            kontrahent.KontrahentID = kontrahentID;
            kontrahent.Kod = kod;
            kontrahent.Nazwa = nazwa;
            kontrahent.NIP = nIP;
            kontrahent.NrKonta = nrKonta;
            kontrahent.IsPodatnikVat = isPodatnikVat;
            kontrahent.AdresID = adresID;
            kontrahent.StatusID = statusID;
            kontrahent.IsActive = isActive;
            return kontrahent;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KontrahentID
        {
            get
            {
                return _KontrahentID;
            }
            set
            {
                if (_KontrahentID != value)
                {
                    OnKontrahentIDChanging(value);
                    ReportPropertyChanging("KontrahentID");
                    _KontrahentID = StructuralObject.SetValidValue(value, "KontrahentID");
                    ReportPropertyChanged("KontrahentID");
                    OnKontrahentIDChanged();
                }
            }
        }
        private global::System.Int32 _KontrahentID;
        partial void OnKontrahentIDChanging(global::System.Int32 value);
        partial void OnKontrahentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Kod
        {
            get
            {
                return _Kod;
            }
            set
            {
                OnKodChanging(value);
                ReportPropertyChanging("Kod");
                _Kod = StructuralObject.SetValidValue(value, false, "Kod");
                ReportPropertyChanged("Kod");
                OnKodChanged();
            }
        }
        private global::System.String _Kod;
        partial void OnKodChanging(global::System.String value);
        partial void OnKodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazwa
        {
            get
            {
                return _Nazwa;
            }
            set
            {
                OnNazwaChanging(value);
                ReportPropertyChanging("Nazwa");
                _Nazwa = StructuralObject.SetValidValue(value, false, "Nazwa");
                ReportPropertyChanged("Nazwa");
                OnNazwaChanged();
            }
        }
        private global::System.String _Nazwa;
        partial void OnNazwaChanging(global::System.String value);
        partial void OnNazwaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NIP
        {
            get
            {
                return _NIP;
            }
            set
            {
                OnNIPChanging(value);
                ReportPropertyChanging("NIP");
                _NIP = StructuralObject.SetValidValue(value, false, "NIP");
                ReportPropertyChanged("NIP");
                OnNIPChanged();
            }
        }
        private global::System.String _NIP;
        partial void OnNIPChanging(global::System.String value);
        partial void OnNIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NrKonta
        {
            get
            {
                return _NrKonta;
            }
            set
            {
                OnNrKontaChanging(value);
                ReportPropertyChanging("NrKonta");
                _NrKonta = StructuralObject.SetValidValue(value, false, "NrKonta");
                ReportPropertyChanged("NrKonta");
                OnNrKontaChanged();
            }
        }
        private global::System.String _NrKonta;
        partial void OnNrKontaChanging(global::System.String value);
        partial void OnNrKontaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPodatnikVat
        {
            get
            {
                return _IsPodatnikVat;
            }
            set
            {
                OnIsPodatnikVatChanging(value);
                ReportPropertyChanging("IsPodatnikVat");
                _IsPodatnikVat = StructuralObject.SetValidValue(value, "IsPodatnikVat");
                ReportPropertyChanged("IsPodatnikVat");
                OnIsPodatnikVatChanged();
            }
        }
        private global::System.Boolean _IsPodatnikVat;
        partial void OnIsPodatnikVatChanging(global::System.Boolean value);
        partial void OnIsPodatnikVatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdresID
        {
            get
            {
                return _AdresID;
            }
            set
            {
                OnAdresIDChanging(value);
                ReportPropertyChanging("AdresID");
                _AdresID = StructuralObject.SetValidValue(value, "AdresID");
                ReportPropertyChanged("AdresID");
                OnAdresIDChanged();
            }
        }
        private global::System.Int32 _AdresID;
        partial void OnAdresIDChanging(global::System.Int32 value);
        partial void OnAdresIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value, "StatusID");
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RodzajID
        {
            get
            {
                return _RodzajID;
            }
            set
            {
                OnRodzajIDChanging(value);
                ReportPropertyChanging("RodzajID");
                _RodzajID = StructuralObject.SetValidValue(value, "RodzajID");
                ReportPropertyChanged("RodzajID");
                OnRodzajIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RodzajID;
        partial void OnRodzajIDChanging(Nullable<global::System.Int32> value);
        partial void OnRodzajIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrzedstawicielKontrahentaID
        {
            get
            {
                return _PrzedstawicielKontrahentaID;
            }
            set
            {
                OnPrzedstawicielKontrahentaIDChanging(value);
                ReportPropertyChanging("PrzedstawicielKontrahentaID");
                _PrzedstawicielKontrahentaID = StructuralObject.SetValidValue(value, "PrzedstawicielKontrahentaID");
                ReportPropertyChanged("PrzedstawicielKontrahentaID");
                OnPrzedstawicielKontrahentaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrzedstawicielKontrahentaID;
        partial void OnPrzedstawicielKontrahentaIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrzedstawicielKontrahentaIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Kontrahent_Adres", "Adres")]
        public Adres Adres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adres>("FirmaProjectModel.FK_Kontrahent_Adres", "Adres").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adres>("FirmaProjectModel.FK_Kontrahent_Adres", "Adres").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Adres> AdresReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adres>("FirmaProjectModel.FK_Kontrahent_Adres", "Adres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Adres>("FirmaProjectModel.FK_Kontrahent_Adres", "Adres", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Faktura_Kontrahent", "Faktura")]
        public EntityCollection<Faktura> Faktura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Faktura>("FirmaProjectModel.FK_Faktura_Kontrahent", "Faktura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Faktura>("FirmaProjectModel.FK_Faktura_Kontrahent", "Faktura", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Kontrahent_Osoba", "Osoba")]
        public Osoba Osoba
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Osoba>("FirmaProjectModel.FK_Kontrahent_Osoba", "Osoba").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Osoba>("FirmaProjectModel.FK_Kontrahent_Osoba", "Osoba").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Osoba> OsobaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Osoba>("FirmaProjectModel.FK_Kontrahent_Osoba", "Osoba");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Osoba>("FirmaProjectModel.FK_Kontrahent_Osoba", "Osoba", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Kontrahent_Status", "Status")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("FirmaProjectModel.FK_Kontrahent_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("FirmaProjectModel.FK_Kontrahent_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("FirmaProjectModel.FK_Kontrahent_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("FirmaProjectModel.FK_Kontrahent_Status", "Status", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="KontrahentRodzaj")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KontrahentRodzaj : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KontrahentRodzaj object.
        /// </summary>
        /// <param name="rodzajID">Initial value of the RodzajID property.</param>
        /// <param name="nazwa">Initial value of the Nazwa property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static KontrahentRodzaj CreateKontrahentRodzaj(global::System.Int32 rodzajID, global::System.String nazwa, global::System.Boolean isActive)
        {
            KontrahentRodzaj kontrahentRodzaj = new KontrahentRodzaj();
            kontrahentRodzaj.RodzajID = rodzajID;
            kontrahentRodzaj.Nazwa = nazwa;
            kontrahentRodzaj.IsActive = isActive;
            return kontrahentRodzaj;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RodzajID
        {
            get
            {
                return _RodzajID;
            }
            set
            {
                if (_RodzajID != value)
                {
                    OnRodzajIDChanging(value);
                    ReportPropertyChanging("RodzajID");
                    _RodzajID = StructuralObject.SetValidValue(value, "RodzajID");
                    ReportPropertyChanged("RodzajID");
                    OnRodzajIDChanged();
                }
            }
        }
        private global::System.Int32 _RodzajID;
        partial void OnRodzajIDChanging(global::System.Int32 value);
        partial void OnRodzajIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazwa
        {
            get
            {
                return _Nazwa;
            }
            set
            {
                OnNazwaChanging(value);
                ReportPropertyChanging("Nazwa");
                _Nazwa = StructuralObject.SetValidValue(value, false, "Nazwa");
                ReportPropertyChanged("Nazwa");
                OnNazwaChanged();
            }
        }
        private global::System.String _Nazwa;
        partial void OnNazwaChanging(global::System.String value);
        partial void OnNazwaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Opis
        {
            get
            {
                return _Opis;
            }
            set
            {
                OnOpisChanging(value);
                ReportPropertyChanging("Opis");
                _Opis = StructuralObject.SetValidValue(value, true, "Opis");
                ReportPropertyChanged("Opis");
                OnOpisChanged();
            }
        }
        private global::System.String _Opis;
        partial void OnOpisChanging(global::System.String value);
        partial void OnOpisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Osoba")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Osoba : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Osoba object.
        /// </summary>
        /// <param name="osobaID">Initial value of the OsobaID property.</param>
        /// <param name="imie">Initial value of the Imie property.</param>
        /// <param name="nazwisko">Initial value of the Nazwisko property.</param>
        /// <param name="telefon">Initial value of the Telefon property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Osoba CreateOsoba(global::System.Int32 osobaID, global::System.String imie, global::System.String nazwisko, global::System.String telefon, global::System.Boolean isActive)
        {
            Osoba osoba = new Osoba();
            osoba.OsobaID = osobaID;
            osoba.Imie = imie;
            osoba.Nazwisko = nazwisko;
            osoba.Telefon = telefon;
            osoba.IsActive = isActive;
            return osoba;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OsobaID
        {
            get
            {
                return _OsobaID;
            }
            set
            {
                if (_OsobaID != value)
                {
                    OnOsobaIDChanging(value);
                    ReportPropertyChanging("OsobaID");
                    _OsobaID = StructuralObject.SetValidValue(value, "OsobaID");
                    ReportPropertyChanged("OsobaID");
                    OnOsobaIDChanged();
                }
            }
        }
        private global::System.Int32 _OsobaID;
        partial void OnOsobaIDChanging(global::System.Int32 value);
        partial void OnOsobaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Imie
        {
            get
            {
                return _Imie;
            }
            set
            {
                OnImieChanging(value);
                ReportPropertyChanging("Imie");
                _Imie = StructuralObject.SetValidValue(value, false, "Imie");
                ReportPropertyChanged("Imie");
                OnImieChanged();
            }
        }
        private global::System.String _Imie;
        partial void OnImieChanging(global::System.String value);
        partial void OnImieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazwisko
        {
            get
            {
                return _Nazwisko;
            }
            set
            {
                OnNazwiskoChanging(value);
                ReportPropertyChanging("Nazwisko");
                _Nazwisko = StructuralObject.SetValidValue(value, false, "Nazwisko");
                ReportPropertyChanged("Nazwisko");
                OnNazwiskoChanged();
            }
        }
        private global::System.String _Nazwisko;
        partial void OnNazwiskoChanging(global::System.String value);
        partial void OnNazwiskoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Telefon
        {
            get
            {
                return _Telefon;
            }
            set
            {
                OnTelefonChanging(value);
                ReportPropertyChanging("Telefon");
                _Telefon = StructuralObject.SetValidValue(value, false, "Telefon");
                ReportPropertyChanged("Telefon");
                OnTelefonChanged();
            }
        }
        private global::System.String _Telefon;
        partial void OnTelefonChanging(global::System.String value);
        partial void OnTelefonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdresID
        {
            get
            {
                return _AdresID;
            }
            set
            {
                OnAdresIDChanging(value);
                ReportPropertyChanging("AdresID");
                _AdresID = StructuralObject.SetValidValue(value, "AdresID");
                ReportPropertyChanged("AdresID");
                OnAdresIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdresID;
        partial void OnAdresIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdresIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Osoba_Adres", "Adres")]
        public Adres Adres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adres>("FirmaProjectModel.FK_Osoba_Adres", "Adres").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adres>("FirmaProjectModel.FK_Osoba_Adres", "Adres").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Adres> AdresReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Adres>("FirmaProjectModel.FK_Osoba_Adres", "Adres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Adres>("FirmaProjectModel.FK_Osoba_Adres", "Adres", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Kontrahent_Osoba", "Kontrahent")]
        public EntityCollection<Kontrahent> Kontrahent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Kontrahent>("FirmaProjectModel.FK_Kontrahent_Osoba", "Kontrahent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Kontrahent>("FirmaProjectModel.FK_Kontrahent_Osoba", "Kontrahent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Pracownik_Osoba", "Pracownik")]
        public EntityCollection<Pracownik> Pracownik
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pracownik>("FirmaProjectModel.FK_Pracownik_Osoba", "Pracownik");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pracownik>("FirmaProjectModel.FK_Pracownik_Osoba", "Pracownik", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="PozycjaFaktury")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PozycjaFaktury : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PozycjaFaktury object.
        /// </summary>
        /// <param name="pozycjaFakturyID">Initial value of the PozycjaFakturyID property.</param>
        /// <param name="fakturaID">Initial value of the FakturaID property.</param>
        /// <param name="towarID">Initial value of the TowarID property.</param>
        /// <param name="ilosc">Initial value of the Ilosc property.</param>
        /// <param name="rabat">Initial value of the Rabat property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="cenaNetto">Initial value of the CenaNetto property.</param>
        /// <param name="stawkaVat">Initial value of the StawkaVat property.</param>
        public static PozycjaFaktury CreatePozycjaFaktury(global::System.Int32 pozycjaFakturyID, global::System.Int32 fakturaID, global::System.Int32 towarID, global::System.Decimal ilosc, global::System.Decimal rabat, global::System.Boolean isActive, global::System.Decimal cenaNetto, global::System.Int32 stawkaVat)
        {
            PozycjaFaktury pozycjaFaktury = new PozycjaFaktury();
            pozycjaFaktury.PozycjaFakturyID = pozycjaFakturyID;
            pozycjaFaktury.FakturaID = fakturaID;
            pozycjaFaktury.TowarID = towarID;
            pozycjaFaktury.Ilosc = ilosc;
            pozycjaFaktury.Rabat = rabat;
            pozycjaFaktury.IsActive = isActive;
            pozycjaFaktury.CenaNetto = cenaNetto;
            pozycjaFaktury.StawkaVat = stawkaVat;
            return pozycjaFaktury;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PozycjaFakturyID
        {
            get
            {
                return _PozycjaFakturyID;
            }
            set
            {
                if (_PozycjaFakturyID != value)
                {
                    OnPozycjaFakturyIDChanging(value);
                    ReportPropertyChanging("PozycjaFakturyID");
                    _PozycjaFakturyID = StructuralObject.SetValidValue(value, "PozycjaFakturyID");
                    ReportPropertyChanged("PozycjaFakturyID");
                    OnPozycjaFakturyIDChanged();
                }
            }
        }
        private global::System.Int32 _PozycjaFakturyID;
        partial void OnPozycjaFakturyIDChanging(global::System.Int32 value);
        partial void OnPozycjaFakturyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FakturaID
        {
            get
            {
                return _FakturaID;
            }
            set
            {
                OnFakturaIDChanging(value);
                ReportPropertyChanging("FakturaID");
                _FakturaID = StructuralObject.SetValidValue(value, "FakturaID");
                ReportPropertyChanged("FakturaID");
                OnFakturaIDChanged();
            }
        }
        private global::System.Int32 _FakturaID;
        partial void OnFakturaIDChanging(global::System.Int32 value);
        partial void OnFakturaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TowarID
        {
            get
            {
                return _TowarID;
            }
            set
            {
                OnTowarIDChanging(value);
                ReportPropertyChanging("TowarID");
                _TowarID = StructuralObject.SetValidValue(value, "TowarID");
                ReportPropertyChanged("TowarID");
                OnTowarIDChanged();
            }
        }
        private global::System.Int32 _TowarID;
        partial void OnTowarIDChanging(global::System.Int32 value);
        partial void OnTowarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Ilosc
        {
            get
            {
                return _Ilosc;
            }
            set
            {
                OnIloscChanging(value);
                ReportPropertyChanging("Ilosc");
                _Ilosc = StructuralObject.SetValidValue(value, "Ilosc");
                ReportPropertyChanged("Ilosc");
                OnIloscChanged();
            }
        }
        private global::System.Decimal _Ilosc;
        partial void OnIloscChanging(global::System.Decimal value);
        partial void OnIloscChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rabat
        {
            get
            {
                return _Rabat;
            }
            set
            {
                OnRabatChanging(value);
                ReportPropertyChanging("Rabat");
                _Rabat = StructuralObject.SetValidValue(value, "Rabat");
                ReportPropertyChanged("Rabat");
                OnRabatChanged();
            }
        }
        private global::System.Decimal _Rabat;
        partial void OnRabatChanging(global::System.Decimal value);
        partial void OnRabatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CenaNetto
        {
            get
            {
                return _CenaNetto;
            }
            set
            {
                OnCenaNettoChanging(value);
                ReportPropertyChanging("CenaNetto");
                _CenaNetto = StructuralObject.SetValidValue(value, "CenaNetto");
                ReportPropertyChanged("CenaNetto");
                OnCenaNettoChanged();
            }
        }
        private global::System.Decimal _CenaNetto;
        partial void OnCenaNettoChanging(global::System.Decimal value);
        partial void OnCenaNettoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StawkaVat
        {
            get
            {
                return _StawkaVat;
            }
            set
            {
                OnStawkaVatChanging(value);
                ReportPropertyChanging("StawkaVat");
                _StawkaVat = StructuralObject.SetValidValue(value, "StawkaVat");
                ReportPropertyChanged("StawkaVat");
                OnStawkaVatChanged();
            }
        }
        private global::System.Int32 _StawkaVat;
        partial void OnStawkaVatChanging(global::System.Int32 value);
        partial void OnStawkaVatChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_PozycjaFaktury_Faktura", "Faktura")]
        public Faktura Faktura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faktura>("FirmaProjectModel.FK_PozycjaFaktury_Faktura", "Faktura").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faktura>("FirmaProjectModel.FK_PozycjaFaktury_Faktura", "Faktura").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faktura> FakturaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faktura>("FirmaProjectModel.FK_PozycjaFaktury_Faktura", "Faktura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faktura>("FirmaProjectModel.FK_PozycjaFaktury_Faktura", "Faktura", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_PozycjaFaktury_Towar", "Towar")]
        public Towar Towar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Towar>("FirmaProjectModel.FK_PozycjaFaktury_Towar", "Towar").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Towar>("FirmaProjectModel.FK_PozycjaFaktury_Towar", "Towar").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Towar> TowarReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Towar>("FirmaProjectModel.FK_PozycjaFaktury_Towar", "Towar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Towar>("FirmaProjectModel.FK_PozycjaFaktury_Towar", "Towar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_PozycjaFaktury_Vat", "Vat")]
        public Vat Vat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vat>("FirmaProjectModel.FK_PozycjaFaktury_Vat", "Vat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vat>("FirmaProjectModel.FK_PozycjaFaktury_Vat", "Vat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vat> VatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vat>("FirmaProjectModel.FK_PozycjaFaktury_Vat", "Vat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vat>("FirmaProjectModel.FK_PozycjaFaktury_Vat", "Vat", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Pracownik")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pracownik : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pracownik object.
        /// </summary>
        /// <param name="pracownikID">Initial value of the PracownikID property.</param>
        /// <param name="osobaID">Initial value of the OsobaID property.</param>
        /// <param name="stanowisko">Initial value of the Stanowisko property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="credentialID">Initial value of the CredentialID property.</param>
        public static Pracownik CreatePracownik(global::System.Int32 pracownikID, global::System.Int32 osobaID, global::System.String stanowisko, global::System.Boolean isActive, global::System.Int32 credentialID)
        {
            Pracownik pracownik = new Pracownik();
            pracownik.PracownikID = pracownikID;
            pracownik.OsobaID = osobaID;
            pracownik.Stanowisko = stanowisko;
            pracownik.IsActive = isActive;
            pracownik.CredentialID = credentialID;
            return pracownik;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PracownikID
        {
            get
            {
                return _PracownikID;
            }
            set
            {
                if (_PracownikID != value)
                {
                    OnPracownikIDChanging(value);
                    ReportPropertyChanging("PracownikID");
                    _PracownikID = StructuralObject.SetValidValue(value, "PracownikID");
                    ReportPropertyChanged("PracownikID");
                    OnPracownikIDChanged();
                }
            }
        }
        private global::System.Int32 _PracownikID;
        partial void OnPracownikIDChanging(global::System.Int32 value);
        partial void OnPracownikIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OsobaID
        {
            get
            {
                return _OsobaID;
            }
            set
            {
                OnOsobaIDChanging(value);
                ReportPropertyChanging("OsobaID");
                _OsobaID = StructuralObject.SetValidValue(value, "OsobaID");
                ReportPropertyChanged("OsobaID");
                OnOsobaIDChanged();
            }
        }
        private global::System.Int32 _OsobaID;
        partial void OnOsobaIDChanging(global::System.Int32 value);
        partial void OnOsobaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Stanowisko
        {
            get
            {
                return _Stanowisko;
            }
            set
            {
                OnStanowiskoChanging(value);
                ReportPropertyChanging("Stanowisko");
                _Stanowisko = StructuralObject.SetValidValue(value, false, "Stanowisko");
                ReportPropertyChanged("Stanowisko");
                OnStanowiskoChanged();
            }
        }
        private global::System.String _Stanowisko;
        partial void OnStanowiskoChanging(global::System.String value);
        partial void OnStanowiskoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CredentialID
        {
            get
            {
                return _CredentialID;
            }
            set
            {
                OnCredentialIDChanging(value);
                ReportPropertyChanging("CredentialID");
                _CredentialID = StructuralObject.SetValidValue(value, "CredentialID");
                ReportPropertyChanged("CredentialID");
                OnCredentialIDChanged();
            }
        }
        private global::System.Int32 _CredentialID;
        partial void OnCredentialIDChanging(global::System.Int32 value);
        partial void OnCredentialIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Pracownik_Credential", "Credential")]
        public Credential Credential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("FirmaProjectModel.FK_Pracownik_Credential", "Credential").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("FirmaProjectModel.FK_Pracownik_Credential", "Credential").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Credential> CredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Credential>("FirmaProjectModel.FK_Pracownik_Credential", "Credential");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Credential>("FirmaProjectModel.FK_Pracownik_Credential", "Credential", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Faktura_Pracownik", "Faktura")]
        public EntityCollection<Faktura> Faktura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Faktura>("FirmaProjectModel.FK_Faktura_Pracownik", "Faktura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Faktura>("FirmaProjectModel.FK_Faktura_Pracownik", "Faktura", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Pracownik_Osoba", "Osoba")]
        public Osoba Osoba
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Osoba>("FirmaProjectModel.FK_Pracownik_Osoba", "Osoba").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Osoba>("FirmaProjectModel.FK_Pracownik_Osoba", "Osoba").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Osoba> OsobaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Osoba>("FirmaProjectModel.FK_Pracownik_Osoba", "Osoba");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Osoba>("FirmaProjectModel.FK_Pracownik_Osoba", "Osoba", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="SposobPlatnosci")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SposobPlatnosci : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SposobPlatnosci object.
        /// </summary>
        /// <param name="sposobPlatnosciID">Initial value of the SposobPlatnosciID property.</param>
        /// <param name="nazwa">Initial value of the Nazwa property.</param>
        /// <param name="opis">Initial value of the Opis property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static SposobPlatnosci CreateSposobPlatnosci(global::System.Int32 sposobPlatnosciID, global::System.String nazwa, global::System.String opis, global::System.Boolean isActive)
        {
            SposobPlatnosci sposobPlatnosci = new SposobPlatnosci();
            sposobPlatnosci.SposobPlatnosciID = sposobPlatnosciID;
            sposobPlatnosci.Nazwa = nazwa;
            sposobPlatnosci.Opis = opis;
            sposobPlatnosci.IsActive = isActive;
            return sposobPlatnosci;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SposobPlatnosciID
        {
            get
            {
                return _SposobPlatnosciID;
            }
            set
            {
                if (_SposobPlatnosciID != value)
                {
                    OnSposobPlatnosciIDChanging(value);
                    ReportPropertyChanging("SposobPlatnosciID");
                    _SposobPlatnosciID = StructuralObject.SetValidValue(value, "SposobPlatnosciID");
                    ReportPropertyChanged("SposobPlatnosciID");
                    OnSposobPlatnosciIDChanged();
                }
            }
        }
        private global::System.Int32 _SposobPlatnosciID;
        partial void OnSposobPlatnosciIDChanging(global::System.Int32 value);
        partial void OnSposobPlatnosciIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazwa
        {
            get
            {
                return _Nazwa;
            }
            set
            {
                OnNazwaChanging(value);
                ReportPropertyChanging("Nazwa");
                _Nazwa = StructuralObject.SetValidValue(value, false, "Nazwa");
                ReportPropertyChanged("Nazwa");
                OnNazwaChanged();
            }
        }
        private global::System.String _Nazwa;
        partial void OnNazwaChanging(global::System.String value);
        partial void OnNazwaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Opis
        {
            get
            {
                return _Opis;
            }
            set
            {
                OnOpisChanging(value);
                ReportPropertyChanging("Opis");
                _Opis = StructuralObject.SetValidValue(value, false, "Opis");
                ReportPropertyChanged("Opis");
                OnOpisChanged();
            }
        }
        private global::System.String _Opis;
        partial void OnOpisChanging(global::System.String value);
        partial void OnOpisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Faktura_SpPlatnosci", "Faktura")]
        public EntityCollection<Faktura> Faktura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Faktura>("FirmaProjectModel.FK_Faktura_SpPlatnosci", "Faktura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Faktura>("FirmaProjectModel.FK_Faktura_SpPlatnosci", "Faktura", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="nazwa">Initial value of the Nazwa property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Status CreateStatus(global::System.Int32 statusID, global::System.String nazwa, global::System.Boolean isActive)
        {
            Status status = new Status();
            status.StatusID = statusID;
            status.Nazwa = nazwa;
            status.IsActive = isActive;
            return status;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = StructuralObject.SetValidValue(value, "StatusID");
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazwa
        {
            get
            {
                return _Nazwa;
            }
            set
            {
                OnNazwaChanging(value);
                ReportPropertyChanging("Nazwa");
                _Nazwa = StructuralObject.SetValidValue(value, false, "Nazwa");
                ReportPropertyChanged("Nazwa");
                OnNazwaChanged();
            }
        }
        private global::System.String _Nazwa;
        partial void OnNazwaChanging(global::System.String value);
        partial void OnNazwaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Kontrahent_Status", "Kontrahent")]
        public EntityCollection<Kontrahent> Kontrahent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Kontrahent>("FirmaProjectModel.FK_Kontrahent_Status", "Kontrahent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Kontrahent>("FirmaProjectModel.FK_Kontrahent_Status", "Kontrahent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Towar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Towar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Towar object.
        /// </summary>
        /// <param name="towarID">Initial value of the TowarID property.</param>
        /// <param name="kod">Initial value of the Kod property.</param>
        /// <param name="nazwa">Initial value of the Nazwa property.</param>
        /// <param name="rodzajID">Initial value of the RodzajID property.</param>
        /// <param name="jednostkaID">Initial value of the JednostkaID property.</param>
        /// <param name="stawkaVatSprzedazy">Initial value of the StawkaVatSprzedazy property.</param>
        /// <param name="stawkaVatZakupu">Initial value of the StawkaVatZakupu property.</param>
        /// <param name="cena">Initial value of the Cena property.</param>
        /// <param name="marza">Initial value of the Marza property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Towar CreateTowar(global::System.Int32 towarID, global::System.String kod, global::System.String nazwa, global::System.Int32 rodzajID, global::System.Int32 jednostkaID, global::System.Int32 stawkaVatSprzedazy, global::System.Int32 stawkaVatZakupu, global::System.Decimal cena, global::System.Decimal marza, global::System.Boolean isActive)
        {
            Towar towar = new Towar();
            towar.TowarID = towarID;
            towar.Kod = kod;
            towar.Nazwa = nazwa;
            towar.RodzajID = rodzajID;
            towar.JednostkaID = jednostkaID;
            towar.StawkaVatSprzedazy = stawkaVatSprzedazy;
            towar.StawkaVatZakupu = stawkaVatZakupu;
            towar.Cena = cena;
            towar.Marza = marza;
            towar.IsActive = isActive;
            return towar;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TowarID
        {
            get
            {
                return _TowarID;
            }
            set
            {
                if (_TowarID != value)
                {
                    OnTowarIDChanging(value);
                    ReportPropertyChanging("TowarID");
                    _TowarID = StructuralObject.SetValidValue(value, "TowarID");
                    ReportPropertyChanged("TowarID");
                    OnTowarIDChanged();
                }
            }
        }
        private global::System.Int32 _TowarID;
        partial void OnTowarIDChanging(global::System.Int32 value);
        partial void OnTowarIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Kod
        {
            get
            {
                return _Kod;
            }
            set
            {
                OnKodChanging(value);
                ReportPropertyChanging("Kod");
                _Kod = StructuralObject.SetValidValue(value, false, "Kod");
                ReportPropertyChanged("Kod");
                OnKodChanged();
            }
        }
        private global::System.String _Kod;
        partial void OnKodChanging(global::System.String value);
        partial void OnKodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazwa
        {
            get
            {
                return _Nazwa;
            }
            set
            {
                OnNazwaChanging(value);
                ReportPropertyChanging("Nazwa");
                _Nazwa = StructuralObject.SetValidValue(value, false, "Nazwa");
                ReportPropertyChanged("Nazwa");
                OnNazwaChanged();
            }
        }
        private global::System.String _Nazwa;
        partial void OnNazwaChanging(global::System.String value);
        partial void OnNazwaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RodzajID
        {
            get
            {
                return _RodzajID;
            }
            set
            {
                OnRodzajIDChanging(value);
                ReportPropertyChanging("RodzajID");
                _RodzajID = StructuralObject.SetValidValue(value, "RodzajID");
                ReportPropertyChanged("RodzajID");
                OnRodzajIDChanged();
            }
        }
        private global::System.Int32 _RodzajID;
        partial void OnRodzajIDChanging(global::System.Int32 value);
        partial void OnRodzajIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JednostkaID
        {
            get
            {
                return _JednostkaID;
            }
            set
            {
                OnJednostkaIDChanging(value);
                ReportPropertyChanging("JednostkaID");
                _JednostkaID = StructuralObject.SetValidValue(value, "JednostkaID");
                ReportPropertyChanged("JednostkaID");
                OnJednostkaIDChanged();
            }
        }
        private global::System.Int32 _JednostkaID;
        partial void OnJednostkaIDChanging(global::System.Int32 value);
        partial void OnJednostkaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StawkaVatSprzedazy
        {
            get
            {
                return _StawkaVatSprzedazy;
            }
            set
            {
                OnStawkaVatSprzedazyChanging(value);
                ReportPropertyChanging("StawkaVatSprzedazy");
                _StawkaVatSprzedazy = StructuralObject.SetValidValue(value, "StawkaVatSprzedazy");
                ReportPropertyChanged("StawkaVatSprzedazy");
                OnStawkaVatSprzedazyChanged();
            }
        }
        private global::System.Int32 _StawkaVatSprzedazy;
        partial void OnStawkaVatSprzedazyChanging(global::System.Int32 value);
        partial void OnStawkaVatSprzedazyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StawkaVatZakupu
        {
            get
            {
                return _StawkaVatZakupu;
            }
            set
            {
                OnStawkaVatZakupuChanging(value);
                ReportPropertyChanging("StawkaVatZakupu");
                _StawkaVatZakupu = StructuralObject.SetValidValue(value, "StawkaVatZakupu");
                ReportPropertyChanged("StawkaVatZakupu");
                OnStawkaVatZakupuChanged();
            }
        }
        private global::System.Int32 _StawkaVatZakupu;
        partial void OnStawkaVatZakupuChanging(global::System.Int32 value);
        partial void OnStawkaVatZakupuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Cena
        {
            get
            {
                return _Cena;
            }
            set
            {
                OnCenaChanging(value);
                ReportPropertyChanging("Cena");
                _Cena = StructuralObject.SetValidValue(value, "Cena");
                ReportPropertyChanged("Cena");
                OnCenaChanged();
            }
        }
        private global::System.Decimal _Cena;
        partial void OnCenaChanging(global::System.Decimal value);
        partial void OnCenaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Marza
        {
            get
            {
                return _Marza;
            }
            set
            {
                OnMarzaChanging(value);
                ReportPropertyChanging("Marza");
                _Marza = StructuralObject.SetValidValue(value, "Marza");
                ReportPropertyChanged("Marza");
                OnMarzaChanged();
            }
        }
        private global::System.Decimal _Marza;
        partial void OnMarzaChanging(global::System.Decimal value);
        partial void OnMarzaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Ilosc
        {
            get
            {
                return _Ilosc;
            }
            set
            {
                OnIloscChanging(value);
                ReportPropertyChanging("Ilosc");
                _Ilosc = StructuralObject.SetValidValue(value, "Ilosc");
                ReportPropertyChanged("Ilosc");
                OnIloscChanged();
            }
        }
        private Nullable<global::System.Decimal> _Ilosc;
        partial void OnIloscChanging(Nullable<global::System.Decimal> value);
        partial void OnIloscChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Towar_Jednostka", "Jednostka")]
        public Jednostka Jednostka
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Jednostka>("FirmaProjectModel.FK_Towar_Jednostka", "Jednostka").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Jednostka>("FirmaProjectModel.FK_Towar_Jednostka", "Jednostka").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Jednostka> JednostkaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Jednostka>("FirmaProjectModel.FK_Towar_Jednostka", "Jednostka");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Jednostka>("FirmaProjectModel.FK_Towar_Jednostka", "Jednostka", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_PozycjaFaktury_Towar", "PozycjaFaktury")]
        public EntityCollection<PozycjaFaktury> PozycjaFaktury
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PozycjaFaktury>("FirmaProjectModel.FK_PozycjaFaktury_Towar", "PozycjaFaktury");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PozycjaFaktury>("FirmaProjectModel.FK_PozycjaFaktury_Towar", "PozycjaFaktury", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Towar_Rodzaj", "TowarRodzaj")]
        public TowarRodzaj TowarRodzaj
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TowarRodzaj>("FirmaProjectModel.FK_Towar_Rodzaj", "TowarRodzaj").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TowarRodzaj>("FirmaProjectModel.FK_Towar_Rodzaj", "TowarRodzaj").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TowarRodzaj> TowarRodzajReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TowarRodzaj>("FirmaProjectModel.FK_Towar_Rodzaj", "TowarRodzaj");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TowarRodzaj>("FirmaProjectModel.FK_Towar_Rodzaj", "TowarRodzaj", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Towar_Sprzedaz", "Vat")]
        public Vat Vat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vat>("FirmaProjectModel.FK_Towar_Sprzedaz", "Vat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vat>("FirmaProjectModel.FK_Towar_Sprzedaz", "Vat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vat> VatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vat>("FirmaProjectModel.FK_Towar_Sprzedaz", "Vat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vat>("FirmaProjectModel.FK_Towar_Sprzedaz", "Vat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Towar_Zakup", "Vat")]
        public Vat Vat1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vat>("FirmaProjectModel.FK_Towar_Zakup", "Vat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vat>("FirmaProjectModel.FK_Towar_Zakup", "Vat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vat> Vat1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vat>("FirmaProjectModel.FK_Towar_Zakup", "Vat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vat>("FirmaProjectModel.FK_Towar_Zakup", "Vat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Ilosc_Towar", "Ilosc")]
        public EntityCollection<Ilosc> Ilosc1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ilosc>("FirmaProjectModel.FK_Ilosc_Towar", "Ilosc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ilosc>("FirmaProjectModel.FK_Ilosc_Towar", "Ilosc", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="TowarRodzaj")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TowarRodzaj : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TowarRodzaj object.
        /// </summary>
        /// <param name="towarRodzajID">Initial value of the TowarRodzajID property.</param>
        /// <param name="nazwa">Initial value of the Nazwa property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static TowarRodzaj CreateTowarRodzaj(global::System.Int32 towarRodzajID, global::System.String nazwa, global::System.Boolean isActive)
        {
            TowarRodzaj towarRodzaj = new TowarRodzaj();
            towarRodzaj.TowarRodzajID = towarRodzajID;
            towarRodzaj.Nazwa = nazwa;
            towarRodzaj.IsActive = isActive;
            return towarRodzaj;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TowarRodzajID
        {
            get
            {
                return _TowarRodzajID;
            }
            set
            {
                if (_TowarRodzajID != value)
                {
                    OnTowarRodzajIDChanging(value);
                    ReportPropertyChanging("TowarRodzajID");
                    _TowarRodzajID = StructuralObject.SetValidValue(value, "TowarRodzajID");
                    ReportPropertyChanged("TowarRodzajID");
                    OnTowarRodzajIDChanged();
                }
            }
        }
        private global::System.Int32 _TowarRodzajID;
        partial void OnTowarRodzajIDChanging(global::System.Int32 value);
        partial void OnTowarRodzajIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazwa
        {
            get
            {
                return _Nazwa;
            }
            set
            {
                OnNazwaChanging(value);
                ReportPropertyChanging("Nazwa");
                _Nazwa = StructuralObject.SetValidValue(value, false, "Nazwa");
                ReportPropertyChanged("Nazwa");
                OnNazwaChanged();
            }
        }
        private global::System.String _Nazwa;
        partial void OnNazwaChanging(global::System.String value);
        partial void OnNazwaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Towar_Rodzaj", "Towar")]
        public EntityCollection<Towar> Towar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Towar>("FirmaProjectModel.FK_Towar_Rodzaj", "Towar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Towar>("FirmaProjectModel.FK_Towar_Rodzaj", "Towar", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Vat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vat object.
        /// </summary>
        /// <param name="vatID">Initial value of the VatID property.</param>
        /// <param name="stawkaVat">Initial value of the StawkaVat property.</param>
        public static Vat CreateVat(global::System.Int32 vatID, global::System.Int32 stawkaVat)
        {
            Vat vat = new Vat();
            vat.VatID = vatID;
            vat.StawkaVat = stawkaVat;
            return vat;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VatID
        {
            get
            {
                return _VatID;
            }
            set
            {
                if (_VatID != value)
                {
                    OnVatIDChanging(value);
                    ReportPropertyChanging("VatID");
                    _VatID = StructuralObject.SetValidValue(value, "VatID");
                    ReportPropertyChanged("VatID");
                    OnVatIDChanged();
                }
            }
        }
        private global::System.Int32 _VatID;
        partial void OnVatIDChanging(global::System.Int32 value);
        partial void OnVatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StawkaVat
        {
            get
            {
                return _StawkaVat;
            }
            set
            {
                OnStawkaVatChanging(value);
                ReportPropertyChanging("StawkaVat");
                _StawkaVat = StructuralObject.SetValidValue(value, "StawkaVat");
                ReportPropertyChanged("StawkaVat");
                OnStawkaVatChanged();
            }
        }
        private global::System.Int32 _StawkaVat;
        partial void OnStawkaVatChanging(global::System.Int32 value);
        partial void OnStawkaVatChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Towar_Sprzedaz", "Towar")]
        public EntityCollection<Towar> Towar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Towar>("FirmaProjectModel.FK_Towar_Sprzedaz", "Towar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Towar>("FirmaProjectModel.FK_Towar_Sprzedaz", "Towar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Towar_Zakup", "Towar")]
        public EntityCollection<Towar> Towar1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Towar>("FirmaProjectModel.FK_Towar_Zakup", "Towar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Towar>("FirmaProjectModel.FK_Towar_Zakup", "Towar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_PozycjaFaktury_Vat", "PozycjaFaktury")]
        public EntityCollection<PozycjaFaktury> PozycjaFaktury
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PozycjaFaktury>("FirmaProjectModel.FK_PozycjaFaktury_Vat", "PozycjaFaktury");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PozycjaFaktury>("FirmaProjectModel.FK_PozycjaFaktury_Vat", "PozycjaFaktury", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FirmaProjectModel", Name="Wojewodztwo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wojewodztwo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wojewodztwo object.
        /// </summary>
        /// <param name="wojewodztwoID">Initial value of the WojewodztwoID property.</param>
        /// <param name="nazwa">Initial value of the Nazwa property.</param>
        public static Wojewodztwo CreateWojewodztwo(global::System.Int32 wojewodztwoID, global::System.String nazwa)
        {
            Wojewodztwo wojewodztwo = new Wojewodztwo();
            wojewodztwo.WojewodztwoID = wojewodztwoID;
            wojewodztwo.Nazwa = nazwa;
            return wojewodztwo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WojewodztwoID
        {
            get
            {
                return _WojewodztwoID;
            }
            set
            {
                if (_WojewodztwoID != value)
                {
                    OnWojewodztwoIDChanging(value);
                    ReportPropertyChanging("WojewodztwoID");
                    _WojewodztwoID = StructuralObject.SetValidValue(value, "WojewodztwoID");
                    ReportPropertyChanged("WojewodztwoID");
                    OnWojewodztwoIDChanged();
                }
            }
        }
        private global::System.Int32 _WojewodztwoID;
        partial void OnWojewodztwoIDChanging(global::System.Int32 value);
        partial void OnWojewodztwoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazwa
        {
            get
            {
                return _Nazwa;
            }
            set
            {
                OnNazwaChanging(value);
                ReportPropertyChanging("Nazwa");
                _Nazwa = StructuralObject.SetValidValue(value, false, "Nazwa");
                ReportPropertyChanged("Nazwa");
                OnNazwaChanged();
            }
        }
        private global::System.String _Nazwa;
        partial void OnNazwaChanging(global::System.String value);
        partial void OnNazwaChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FirmaProjectModel", "FK_Adres_Wojewodztwo", "Adres")]
        public EntityCollection<Adres> Adres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Adres>("FirmaProjectModel.FK_Adres_Wojewodztwo", "Adres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Adres>("FirmaProjectModel.FK_Adres_Wojewodztwo", "Adres", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
